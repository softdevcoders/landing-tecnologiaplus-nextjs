.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.85);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 0;
  backdrop-filter: blur(4px);
  /* Específico para móviles reales */
  -webkit-overflow-scrolling: touch;

  @media (min-width: 768px) {
    padding: 1rem;
  }
}

.modalContent {
  background: white;
  border-radius: 8px;
  width: 100%;
  max-width: 1200px;
  height: 90vh;
  max-height: 90vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  /* Específico para móviles reales */
  position: relative;
  padding-bottom: 2rem;

  @media (min-width: 768px) {
    height: 85vh;
    max-height: 85vh;
    border-radius: 12px;
  }
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem;
  border-bottom: 1px solid #e0e0e0;
  background: #f8f9fa;
  flex-shrink: 0;

  @media (min-width: 768px) {
    padding: 1.5rem 2rem;
  }
}

.modalTitle {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600;
  color: #333;
  line-height: 1.2;

  @media (min-width: 768px) {
    font-size: 1.5rem;
  }
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.25rem;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 50%;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #666;
  transition: all 0.2s ease;

  @media (min-width: 768px) {
    width: 40px;
    height: 40px;
    font-size: 1.5rem;
    padding: 0.5rem;
  }

  &:hover {
    background: rgba(0, 0, 0, 0.1);
    color: #333;
  }
}

.galleryGrid {
  padding: 0.75rem;
  overflow-y: auto;
  overflow-x: hidden;
  display: grid;
  gap: 0.75rem;
  flex: 1;
  align-items: start;
  /* Específico para móviles reales */
  -webkit-overflow-scrolling: touch;
  will-change: scroll-position;
  min-height: 0;
  
  /* Mobile: 1 columna para pantallas muy pequeñas */
  grid-template-columns: 1fr;
  grid-auto-rows: min-content;
  
  /* Mobile landscape y tablets pequeñas: 2 columnas */
  @media (min-width: 480px) {
    grid-template-columns: repeat(2, 1fr);
    padding: 1rem;
    gap: 1rem;
  }
  
  /* Tablets: 2-3 columnas dependiendo del espacio */
  @media (min-width: 768px) {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    padding: 2rem;
    gap: 1.5rem;
  }
  
  /* Desktop: 3-4 columnas */
  @media (min-width: 1200px) {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 2rem;
  }
  
  /* Desktop grande: máximo 4 columnas */
  @media (min-width: 1400px) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.imageItem {
  position: relative;
  width: 100%;
  aspect-ratio: 4/3;
  overflow: hidden;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  transition: transform 0.2s ease;
  background: #f9f9f9;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Específico para móviles reales */
  contain: layout;
  transform: translateZ(0); /* Forzar aceleración hardware */

  /* En mobile, reducir el efecto hover */
  @media (max-width: 767px) {
    &:hover {
      transform: none;
      box-shadow: none;
    }
    
    &:active {
      transform: scale(0.98);
    }
  }

  :global(.imageContainer) {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  :global(.imageContainer img) {
    max-width: 100% !important;
    max-height: 100% !important;
    width: auto !important;
    height: auto !important;
    object-fit: contain !important;
    display: block !important;
    position: relative !important;
  }

  /* Asegurar que el Next.js Image no cause problemas */
  :global(.imageContainer) > :global(span) {
    position: relative !important;
    width: 100% !important;
    height: 100% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  /* Asegurar que el span interno de Next.js Image también funcione */
  :global(.imageContainer) > :global(span) > :global(img) {
    position: relative !important;
    width: auto !important;
    height: auto !important;
    max-width: 100% !important;
    max-height: 100% !important;
    object-fit: contain !important;
  }
} 