# Configuración para desactivar permanentemente el subdominio wordpress
# Todas las solicitudes retornan 410 (Gone) - El recurso ya no está disponible

# Servidor HTTPS - Retorna 410 para todas las solicitudes
server {
  listen 443 ssl http2;
  server_name wordpress.tecnologiaplus.com www.wordpress.tecnologiaplus.com;

  # SSL/TLS Configuration
  # Cuando usas 'listen 443 ssl', nginx REQUIERE certificados SSL para poder:
  # 1. Establecer la conexión HTTPS (handshake TLS)
  # 2. Responder con el código 410 (sin certificados, la conexión falla antes de llegar a nginx)
  # Sin estos certificados, nginx no puede procesar solicitudes HTTPS y fallará al iniciar
  ssl_certificate /etc/letsencrypt/live/wordpress.tecnologiaplus.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/wordpress.tecnologiaplus.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Retornar 410 (Gone) para TODAS las solicitudes
  # location / captura el path raíz (/) y TODOS los paths subsecuentes (/cualquier/ruta)
  # El código 410 indica que el recurso ya no está disponible y no volverá a estar disponible
  location / {
    # Headers para evitar cache (se aplican con 'always' incluso cuando hay return)
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    
    # Retornar 410 - termina el procesamiento inmediatamente
    return 410 "Gone";
  }
}

# Servidor HTTP - Retorna 410 para todas las solicitudes
server {
  listen 80;
  server_name wordpress.tecnologiaplus.com www.wordpress.tecnologiaplus.com;
  
  # Retornar 410 (Gone) para TODAS las solicitudes
  # location / captura el path raíz (/) y TODOS los paths subsecuentes (/cualquier/ruta)
  location / {
    # Headers para evitar cache (se aplican con 'always' incluso cuando hay return)
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    
    # Retornar 410 - termina el procesamiento inmediatamente
    return 410 "Gone";
  }
}
